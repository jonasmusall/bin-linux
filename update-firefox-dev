#! /bin/sh

# check if more recent version is available
# versioning scheme: <MILESTONE=[0-9]+> ".0b" <BUILD=[0-9]+>
VER_REMOTE=$(curl -si "https://download.mozilla.org/?product=firefox-devedition-latest-ssl&os=linux64&lang=en-US" | grep "Location: " | grep -oP '/\K[0-9]+\.0b[0-9]+(?=/)')
VER_LOCAL=$(/opt/firefox-dev/firefox --version | grep -oE '[0-9]+\.0b[0-9]+')
VER_REMOTE_MILESTONE=$(echo "$VER_REMOTE" | grep -oP '[0-9]+(?=\.)')
VER_REMOTE_BUILD=$(echo "$VER_REMOTE" | grep -oP '\.0b\K[0-9]+')
VER_LOCAL_MILESTONE=$(echo "$VER_LOCAL" | grep -oP '[0-9]+(?=\.)')
VER_LOCAL_BUILD=$(echo "$VER_LOCAL" | grep -oP '\.0b\K[0-9]+')
if [ $VER_LOCAL_MILESTONE -gt $VER_REMOTE_MILESTONE ] || [ $VER_LOCAL_MILESTONE -eq $VER_REMOTE_MILESTONE -a $VER_LOCAL_BUILD -ge $VER_REMOTE_BUILD ]; then
  echo "No update available from $VER_LOCAL to $VER_REMOTE"
  exit
fi
echo "Update available from $VER_LOCAL to $VER_REMOTE"

RESTART=false
# check if firefox is running
if fuser -s /opt/firefox-dev/firefox-bin; then
  #echo "Please close Firefox Developer Edition before attempting to update the application"
  #exit

  echo "Firefox Developer Edition is currently running and will be restarted during the update."
  read -p "Continue? [Y/n] " CONF
  if [ "$CONF" = "y" ] || [ "$CONF" = "Y" ] || [ "$CONF" = "" ]; then
    # kill
    fuser -sk -SIGTERM /opt/firefox-dev/firefox-bin > /dev/null
    RESTART=true
  else
    echo "Abort"
    exit
  fi
fi

# force sudo password
sudo true

# download and install (= copy all files)
echo "Downloading the latest version of Firefox Developer Edition"
cd /tmp
sudo rm -frd firefox
curl -L --raw "https://download.mozilla.org/?product=firefox-devedition-latest-ssl&os=linux64&lang=en-US" | sudo tar -x -j
echo "Installing"
sudo cp -RT firefox /opt/firefox-dev
echo "Done"

if $RESTART; then
  echo "Restarting Firefox Developer Edition"
  nohup /opt/firefox-dev/firefox > /dev/null 2> /dev/null &
  sleep 1
fi
